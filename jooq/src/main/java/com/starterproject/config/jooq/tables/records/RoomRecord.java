/*
 * This file is generated by jOOQ.
 */
package com.starterproject.config.jooq.tables.records;


import com.starterproject.config.jooq.tables.Room;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoomRecord extends TableRecordImpl<RoomRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ed_mex.room.idroom</code>.
     */
    public void setIdroom(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ed_mex.room.idroom</code>.
     */
    public Integer getIdroom() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ed_mex.room.patient_name</code>.
     */
    public void setPatientName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ed_mex.room.patient_name</code>.
     */
    public String getPatientName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ed_mex.room.patiente_surname</code>.
     */
    public void setPatienteSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ed_mex.room.patiente_surname</code>.
     */
    public String getPatienteSurname() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Room.ROOM.IDROOM;
    }

    @Override
    public Field<String> field2() {
        return Room.ROOM.PATIENT_NAME;
    }

    @Override
    public Field<String> field3() {
        return Room.ROOM.PATIENTE_SURNAME;
    }

    @Override
    public Integer component1() {
        return getIdroom();
    }

    @Override
    public String component2() {
        return getPatientName();
    }

    @Override
    public String component3() {
        return getPatienteSurname();
    }

    @Override
    public Integer value1() {
        return getIdroom();
    }

    @Override
    public String value2() {
        return getPatientName();
    }

    @Override
    public String value3() {
        return getPatienteSurname();
    }

    @Override
    public RoomRecord value1(Integer value) {
        setIdroom(value);
        return this;
    }

    @Override
    public RoomRecord value2(String value) {
        setPatientName(value);
        return this;
    }

    @Override
    public RoomRecord value3(String value) {
        setPatienteSurname(value);
        return this;
    }

    @Override
    public RoomRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoomRecord
     */
    public RoomRecord() {
        super(Room.ROOM);
    }

    /**
     * Create a detached, initialised RoomRecord
     */
    public RoomRecord(Integer idroom, String patientName, String patienteSurname) {
        super(Room.ROOM);

        setIdroom(idroom);
        setPatientName(patientName);
        setPatienteSurname(patienteSurname);
        resetChangedOnNotNull();
    }
}
